clc;close all;clear all;fprintf('\n              FM_example1.m         \n');fprintf('\nPhase Modulation (PM) versus Frequency Modulation (FM)\n');fprintf('\n ******* Example of slide p.79 *****\n\n');a=input(' Enter the value of slope:  a = ');%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%% create the vector of total time %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Fs = 1024;        % sampling rateTs = 1/Fs;        % sampling periodt  = [-1:Ts:4];    % total time for simulation%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~% modulating signal generation % m(t) = a*t, for t>=0 else m(t) = 0, See: Slide 79%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~t1 = t (t < 0);             % negative time valuesm1 = zeros(1,length(t1));   % the signal is zero t2 = t (t >= 0);            % positive time valuesm2 = a*t2;  % increasing linearly with time t as a*t m  = [m1 m2]; % concatenate signal values %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%% carrier signal generation%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Ac = 1;                  % Amplitude of carrier signalfc = 5;                  % Frequency of carrier signal sc = Ac*cos(2*pi*fc*t);  % Eqation of carrier signal%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%% phase modulation (PM), See: Example of slide 79%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kp  = 2*pi;% Phase modulated signalsPM = Ac*cos(2*pi*fc*t + kp*m); % compute the vector of frequencies FMfPM_negative = fc*ones(1,length(t1));fPM_positive = (fc + (1/(2*pi))*kp*a)*ones(1,length(t2));fPM = [ fPM_negative fPM_positive]; %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%% frequency modulation (FM), See: Example of slide 79%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kf  = 1.0;integral_m = cumsum(m)*Ts; % integral of signal m(t)theta= 2*pi*fc*t + 2*pi*kf*integral_m; % see slide 74sFM = Ac*cos(theta); % Frequency modulated signalfFM = fc + kf*m; % vector of frequencies FM%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~fprintf('\n\n Experiment settings: \n\n');%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~disp('###################################################');fprintf('  Slope of m(t) = a*t            a = %f\n\n', a);fprintf('Amplitude of carrier signal      Ac= %f\n', Ac);fprintf('Frequency of carrier signal      fc= %f\n\n',fc);fprintf('Phase deviation factor           kp= %f\n', kp);fprintf('Frequency deviation factor       kf= %f\n\n',kf);disp('###################################################');%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%% plot m(t), sPM(t) and sFM(t)  %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~figure()subplot(311)plot(t,m,'r-', 'Linewidth',2); drawnow();title (['Message or modulating signal  m(t)= ',num2str(a),'*t']);xlabel('Time (sec) ');ylabel('Amplitude of m(t) (Volt)');grid minor;subplot(312)plot(t,sPM,'Linewidth',1); drawnow();title ('Phase modulated signal  s_{PM}(t)');xlabel('Time (sec) ');ylabel('Amplitude (Volt)');grid minor;subplot(313)plot(t,sFM,'Linewidth',1); drawnow();title ('Frequency modulated signal  s_{FM}(t)');xlabel('Time (sec) ');ylabel('Amplitude (Volt)');grid minor;%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%% plot PM frequencies vs FM frequencies for m(t)%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~figure()plot(t,fPM ,'r-', 'Linewidth',2,...     t,fFM ,'b--','Linewidth',2);title (['PM frequencies vs FM frequencies for m(t)=',num2str(a),'*t']);legend('f_{PM}(t)','f_{FM}(t)','Location','SouthEast')xlabel('Time (sec) ');ylabel('(Hz)');grid minor;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% myt = [1, 2, 3, 4];% fFM_table = fc + kf*a*myt;% fPM_table = (fc + (1/(2*pi))*kp*a)*ones(1,length(myt));% disp([ myt' fPM_table' fFM_table' ])